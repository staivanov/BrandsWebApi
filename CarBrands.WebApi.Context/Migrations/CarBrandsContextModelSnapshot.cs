// <auto-generated />
using System;
using CarBrands.WebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarBrands.WebApi.Data.Migrations
{
    [DbContext(typeof(CarBrandsContext))]
    partial class CarBrandsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("CarBrandCountryOfProduction", b =>
                {
                    b.Property<int>("CarBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountriesOfProductionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarBrandId", "CountriesOfProductionId");

                    b.HasIndex("CountriesOfProductionId");

                    b.ToTable("CarBrandCountryOfProduction");
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slogan")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateOnly(1931, 1, 1),
                            Description = "Dr. Ing. h.c. F. Porsche AG, usually shortened to Porsche,\r\n                                        is a German automobile\r\n                                        manufacturer specializing in high-performance sports cars, SUVs and sedans",
                            Name = "Porsche",
                            Slogan = "There is no substitute."
                        });
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoupeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProducedUnits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBrandId = 1,
                            CoupeType = 2,
                            DateCreated = new DateOnly(2009, 4, 5),
                            Description = "The Porsche Panamera is a mid/full-sized luxury car (E-segment or F-segment for LWB in Europe) manufactured and marketed by German automobile manufacturer Porsche across two generations using a front-engine, rear or all-wheel drive configuration.",
                            Name = "Panamera",
                            NumberOfDoors = 4,
                            ProducedUnits = 30000
                        },
                        new
                        {
                            Id = 2,
                            CarBrandId = 1,
                            CoupeType = 11,
                            DateCreated = new DateOnly(2019, 7, 30),
                            Description = "The Porsche 911 (pronounced Nine Eleven or in German: Neunelf) is a two-door 2+2 high performance rear-engined sports car introduced in September 1964 by Porsche AG of Stuttgart, Germany. It has a rear-mounted flat-six engine and originally a torsion bar suspension.The car has been continuously enhanced through the years but the basic concept has remained unchanged.The engines were air-cooled until the introduction of the 996 series in 1998.",
                            Name = "911 - 992 Series",
                            NumberOfDoors = 2,
                            ProducedUnits = 10000
                        });
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.CountryOfProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ISO3166Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CountriesOfProduction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Germany is a country located in the heart of Western Europe. It is bordered by Denmark, Poland, Czechia, Austria, Switzerland, France, Luxembourg, Belgium, Netherlands, the North Sea, and the Baltic Sea. Germany has a strategic location on the North European Plain and along the entrance to the Baltic Sea.",
                            ISO3166Code = "DE",
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.Headquarter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId")
                        .IsUnique();

                    b.ToTable("Headquarters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Porscheplatz 1 in 70435 Stuttgart",
                            CarBrandId = 1,
                            DateCreated = new DateOnly(1931, 1, 1),
                            Description = "Main headquarter for Porsche World.",
                            Name = "Porsche Automobil Holding SE"
                        });
                });

            modelBuilder.Entity("CarBrandCountryOfProduction", b =>
                {
                    b.HasOne("CarBrands.WebApi.Domain.Entities.CarBrand", null)
                        .WithMany()
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBrands.WebApi.Domain.Entities.CountryOfProduction", null)
                        .WithMany()
                        .HasForeignKey("CountriesOfProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.CarModel", b =>
                {
                    b.HasOne("CarBrands.WebApi.Domain.Entities.CarBrand", "CarBrand")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.Headquarter", b =>
                {
                    b.HasOne("CarBrands.WebApi.Domain.Entities.CarBrand", "CarBrand")
                        .WithOne("Headquarter")
                        .HasForeignKey("CarBrands.WebApi.Domain.Entities.Headquarter", "CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("CarBrands.WebApi.Domain.Entities.CarBrand", b =>
                {
                    b.Navigation("CarModels");

                    b.Navigation("Headquarter")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
